package main

import "designPatterns/visitor"

func main() {
  //srp()
  //ocp()
  //lsp()
  //did()
  //  builder.BuildHTML()
  //  builder.BuildPerson()
  //  builder.FunctionalPerson()
  //  factories.PrototypeFactory()
  //  prototype.Copy()
  //  prototype.FactoryPrototype()
  //  singleton.Once()
  //  adapter.Adapt()
  //  bridge.Bridge()
  //  composite.ShapesComposite()
  //  composite.NeuralComposite()
  //  decorator.Aggregation()
  //  decorator.Decorate()
  //  facade.Facade()
  //  flyweight.TextFormat()
  //  flyweight.UserNames()
  //  proxy.Protec()
  //  proxy.VirtualProxy()
  //  chain_of_responsibility.MethodChain()
  //  chain_of_responsibility.Broker()
  //  command.DoCommand()
  //  interpreter.Interpret()
  //  iterator.Iteration()
  //  iterator.TraverseTree()
  //  mediator.MediateChatRoom()
  //  memento.Meme()
  //  memento.UndoRedo()
  //  observer.DoObserving()
  //  state.ClassicState()
  //  state.MachineState()
  //  state.SwitchState()
  //  strategy.GoStrategy()
  //  template.TempMethod()
  //  template.FunctionalTemplate()
    visitor.Visit()
}

